Inspecting 50 files
...C.C.......CCCC....C..........C.CCCCC...CCCCCC.C

Offenses:

app/controllers/articles_controller.rb:12:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:success] = "Article created successfully!"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sessions_controller.rb:7:8: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if @user && @user.authenticate(params[:session][:password])
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/article.rb:4:41: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :title, :content, :user_id, :presence => true
                                        ^^^^^^^^^^^^
app/models/session.rb:2:21: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :email, :presence => true, :email => true
                    ^^^^^^^^^^^^
app/models/session.rb:2:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :email, :presence => true, :email => true
                                       ^^^^^^^^^
app/models/session.rb:3:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :password_digest, :length => { :minimum => 5 }, :presence => true
                              ^^^^^^^^^^
app/models/session.rb:3:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :password_digest, :length => { :minimum => 5 }, :presence => true
                                           ^^^^^^^^^^^
app/models/session.rb:3:61: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :password_digest, :length => { :minimum => 5 }, :presence => true
                                                            ^^^^^^^^^^^^
app/models/user.rb:4:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :first_name, :last_name, :presence => true
                                     ^^^^^^^^^^^^
app/models/user.rb:5:21: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :email, :presence => true, :uniqueness => true, :email => true
                    ^^^^^^^^^^^^
app/models/user.rb:5:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :email, :presence => true, :uniqueness => true, :email => true
                                       ^^^^^^^^^^^^^^
app/models/user.rb:5:61: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :email, :presence => true, :uniqueness => true, :email => true
                                                            ^^^^^^^^^
app/models/user.rb:6:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :password_digest, :length => { :minimum => 5 }, :presence => true
                              ^^^^^^^^^^
app/models/user.rb:6:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :password_digest, :length => { :minimum => 5 }, :presence => true
                                           ^^^^^^^^^^^
app/models/user.rb:6:61: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates :password_digest, :length => { :minimum => 5 }, :presence => true
                                                            ^^^^^^^^^^^^
app/validators/email_validator.rb:3:5: C: Style/GuardClause: Use a guard clause (return if value =~ /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\z/i) instead of wrapping the code inside a conditional expression.
    unless value =~ /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\z/i
    ^^^^^^
app/validators/email_validator.rb:3:5: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless value =~ /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\z/i
    ^^^^^^
app/validators/email_validator.rb:4:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      record.errors[attribute] << (options[:message] || "is not an email")
                                                        ^^^^^^^^^^^^^^^^^
config/environments/production.rb:83:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:7:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:8:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
min_threads_count = ENV.fetch("RAILS_MIN_THREADS") { max_threads_count }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:13:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
port        ENV.fetch("PORT") { 3000 }
                      ^^^^^^
config/puma.rb:17:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                      ^^^^^^^^^^^
config/puma.rb:17:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                                     ^^^^^^^^^^^^^
config/puma.rb:20:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                  ^^^^^^^^^
config/puma.rb:20:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                               ^^^^^^^^^^^^^^^^^^^^^
config/spring.rb:2:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".ruby-version",
  ^^^^^^^^^^^^^^^
config/spring.rb:3:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".rbenv-vars",
  ^^^^^^^^^^^^^
config/spring.rb:4:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/restart.txt",
  ^^^^^^^^^^^^^^^^^
config/spring.rb:5:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/caching-dev.txt"
  ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/articles_controller_spec.rb:17:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(response).to render_template "new"
                                            ^^^^^
spec/controllers/articles_controller_spec.rb:34:22: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        let(:params) {
                     ^
spec/controllers/articles_controller_spec.rb:44:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
          expect {
                 ^
spec/controllers/articles_controller_spec.rb:67:22: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        let(:params) {
                     ^
spec/controllers/articles_controller_spec.rb:73:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
          expect {
                 ^
spec/controllers/articles_controller_spec.rb:79:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          expect(response).to render_template "new"
                                              ^^^^^
spec/controllers/articles_controller_spec.rb:90:22: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        let(:params) {
                     ^
spec/controllers/articles_controller_spec.rb:96:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
          expect {
                 ^
spec/controllers/articles_controller_spec.rb:102:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          expect(response).to render_template "new"
                                              ^^^^^
spec/controllers/pages_controller_spec.rb:26:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(response).to render_template "secret_page"
                                            ^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:2:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST #create" do
           ^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:3:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with correct params" do
            ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:13:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to homepage" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:18:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns a 302 Temp Redirect" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:25:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "without correct params" do
            ^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:28:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "re-renders #new form" do
         ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:30:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(response).to render_template "new"
                                            ^^^^^
spec/controllers/sessions_controller_spec.rb:32:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not return a 302 Temp Redirect response" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:39:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE #logout" do
           ^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:40:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when logout triggered" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:50:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to homepage" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sessions_controller_spec.rb:57:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "clears the session variable" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:2:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST #create" do
           ^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:3:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with correct params" do
            ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:4:24: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:parameters) {
                       ^
spec/controllers/users_controller_spec.rb:8:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to homepage" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:13:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns a 302 Temp Redirect response" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:18:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "saves a new user to the database" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:19:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/controllers/users_controller_spec.rb:25:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "without correct params" do
            ^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:26:24: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:parameters) {
                       ^
spec/controllers/users_controller_spec.rb:30:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "re-renders #new form" do
         ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:32:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(response).to render_template "new"
                                            ^^^^^
spec/controllers/users_controller_spec.rb:35:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not return a 302 Temp Redirect response" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:40:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not save a new user to the database" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/users_controller_spec.rb:41:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/models/user_spec.rb:2:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  user = User.new(first_name: "John",
                              ^^^^^^
spec/models/user_spec.rb:3:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  last_name: "Doe",
                             ^^^^^
spec/models/user_spec.rb:4:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  email: "john@unique.com",
                         ^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:5:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  password: "hard2guess")
                            ^^^^^^^^^^^^
spec/models/user_spec.rb:7:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is valid with all valid attributes" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:11:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is not valid without a first name" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:16:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is not valid without a last name" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:21:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is not valid without an email" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:28:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is not valid without a properly formatted email" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:29:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    user.email = "notemail.com"
                 ^^^^^^^^^^^^^^
spec/models/user_spec.rb:33:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is not valid without a password" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:38:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "is not valid without a password that is less than 5 characters" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:39:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    user.password = "1234"
                    ^^^^^^
spec/rails_helper.rb:8:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/articles_request_spec.rb:3:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Articles", type: :request do
               ^^^^^^^^^^
spec/requests/sessions_request_spec.rb:3:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Sessions", type: :request do
               ^^^^^^^^^^
spec/requests/user_request_spec.rb:3:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Users", type: :request do
               ^^^^^^^
spec/spec_helper.rb:52:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/views/articles/index.html.erb_spec.rb:5:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        assign(:articles, [build_stubbed(:article, title: "Test", content: "Lorem Ipsum.")])
                                                          ^^^^^^
spec/views/articles/index.html.erb_spec.rb:5:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        assign(:articles, [build_stubbed(:article, title: "Test", content: "Lorem Ipsum.")])
                                                                           ^^^^^^^^^^^^^^
spec/views/articles/index.html.erb_spec.rb:9:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(rendered).to have_content("Test")
                                         ^^^^^^
spec/views/articles/index.html.erb_spec.rb:10:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(rendered).to have_content("Lorem Ipsum.")
                                         ^^^^^^^^^^^^^^
spec/views/articles/index.html.erb_spec.rb:16:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        assign(:articles, [build_stubbed(:article, title: "Test1", content: "1. Lorem Ipsum."),
                                                          ^^^^^^^
spec/views/articles/index.html.erb_spec.rb:16:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        assign(:articles, [build_stubbed(:article, title: "Test1", content: "1. Lorem Ipsum."),
                                                                            ^^^^^^^^^^^^^^^^^
spec/views/articles/index.html.erb_spec.rb:17:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           build_stubbed(:article, title: "Test2", content: "2. Lorem Ipsum.")])
                                                          ^^^^^^^
spec/views/articles/index.html.erb_spec.rb:17:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           build_stubbed(:article, title: "Test2", content: "2. Lorem Ipsum.")])
                                                                            ^^^^^^^^^^^^^^^^^
spec/views/articles/index.html.erb_spec.rb:21:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(rendered).to have_content("Test1")
                                         ^^^^^^^
spec/views/articles/index.html.erb_spec.rb:22:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(rendered).to have_content("1. Lorem Ipsum.")
                                         ^^^^^^^^^^^^^^^^^
spec/views/articles/index.html.erb_spec.rb:23:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(rendered).to have_content("Test2")
                                         ^^^^^^^
spec/views/articles/index.html.erb_spec.rb:24:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(rendered).to have_content("2. Lorem Ipsum.")
                                         ^^^^^^^^^^^^^^^^^
spec/views/articles/index.html.erb_spec.rb:38:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        assign(:articles, [build_stubbed(:article, title: "Test", content: "Lorem Ipsum.")])
                                                          ^^^^^^
spec/views/articles/index.html.erb_spec.rb:38:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        assign(:articles, [build_stubbed(:article, title: "Test", content: "Lorem Ipsum.")])
                                                                           ^^^^^^^^^^^^^^

50 files inspected, 98 offenses detected
